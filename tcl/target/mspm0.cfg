# SPDX-License-Identifier: GPL-2.0-or-later

# TI MSPM0 chip family

# only SWD is supported, no JTAG
transport select swd

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME mspm0
}

if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x0BB8802F
}

swd newdap $_CHIPNAME cpu -irlen 4 -irmask 0xf -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   # default to 2K working area
   set _WORKAREASIZE 0x800
}

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap

# NOTE: you may need or want to reconfigure the work area; you may want to use
# other addresses (at end of mem not beginning) or back it up.
$_TARGETNAME configure -work-area-phys 0x20200000 -work-area-size $_WORKAREASIZE

$_TARGETNAME configure -event gdb-attach { reset init }

# peripherals are not reset when executing the Cortex-M default reset.
# A SYSRST is executed via the device specific SYSCTL register instead
$_TARGETNAME configure -event reset-assert {mspm0 reset sysrst}
# $_TARGETNAME configure -event reset-start { cortex_m reset_config sysresetreq }

# flash configuration ... autodetects sizes, autoprobed
flash bank $_CHIPNAME.flash mspm0 0 0 0 0 $_TARGETNAME
